<!--
 **********************************************************************

 Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.

 This copy of Ice is licensed to you under the terms described in the
 ICE_LICENSE file included in this distribution.

 **********************************************************************
-->

<project name="test_Ice_translator" default="all" basedir=".">

    <!-- set global properties for this build -->
    <property name="top.dir" value="../../.."/>

    <!-- import common definitions -->
    <import file="${top.dir}/config/common.xml"/>

    <target name="generate" depends="init">
        <!-- Create the output directory for generated code -->
        <mkdir dir="${generated.dir}"/>
        <slice2java outputdir="${generated.dir}" tie="on" stream="on">
            <includepath>
                <pathelement path="." />
            </includepath>
            <fileset dir="." includes="Metadata.ice"/>
            <fileset dir="." includes="DoubleModuleNoPackage.ice"/>
            <fileset dir="." includes="DoubleModuleWithPackage.ice"/>
            <fileset dir="." includes="NoModuleNoPackage.ice"/>
            <fileset dir="." includes="NoModuleWithPackage.ice"/>
            <fileset dir="." includes="SingleModuleNoPackage.ice"/>
            <fileset dir="." includes="SingleModuleWithPackage.ice"/>
            <fileset dir="." includes="TestSingleModuleNoPackage4.ice"/>
            <fileset dir="." includes="TestSingleModuleNoPackage6.ice"/>
            <fileset dir="." includes="TestSingleModuleNoPackage7.ice"/>
            <fileset dir="." includes="TestSingleModuleWithPackage4.ice"/>
            <fileset dir="." includes="TestSingleModuleWithPackage5.ice"/>
            <fileset dir="." includes="TestSingleModuleWithPackage6.ice"/>
            <fileset dir="." includes="TestSingleModuleWithPackage7.ice"/>
            <fileset dir="." includes="TestSingleModuleWithPackage9.ice"/>
            <fileset dir="." includes="TestSingleModuleWithPackage10.ice"/>
            <fileset dir="." includes="TestSingleModuleWithPackage11.ice"/>
            <fileset dir="." includes="TestSingleModuleWithPackage12.ice"/>
            <fileset dir="." includes="TestSingleModuleWithPackage13.ice"/>
        </slice2java>
        <!-- We use another task to limit the size of the slice2java command line -->
        <slice2java outputdir="${generated.dir}" tie="on" stream="on">
            <includepath>
                <pathelement path="." />
            </includepath>
            <fileset dir="." includes="TestDoubleModuleNoPackage4.ice"/>
            <fileset dir="." includes="TestDoubleModuleNoPackage5.ice"/>
            <fileset dir="." includes="TestDoubleModuleNoPackage6.ice"/>
            <fileset dir="." includes="TestDoubleModuleNoPackage7.ice"/>
            <fileset dir="." includes="TestDoubleModuleWithPackage4.ice"/>
            <fileset dir="." includes="TestDoubleModuleWithPackage5.ice"/>
            <fileset dir="." includes="TestDoubleModuleWithPackage6.ice"/>
            <fileset dir="." includes="TestDoubleModuleWithPackage7.ice"/>
            <fileset dir="." includes="TestDoubleModuleWithPackage8.ice"/>
            <fileset dir="." includes="TestDoubleModuleWithPackage9.ice"/>
            <fileset dir="." includes="TestDoubleModuleWithPackage10.ice"/>
            <fileset dir="." includes="TestDoubleModuleWithPackage11.ice"/>
        </slice2java>
        <slice2java outputdir="${generated.dir}" tie="on" stream="on" underscore="on">
            <includepath>
                <pathelement path="." />
            </includepath>
            <fileset dir="." includes="Underscore.ice"/>
        </slice2java>
    </target>

    <target name="compile" depends="generate">
        <mkdir dir="${class.dir}"/>
	<javac srcdir="." destdir="${class.dir}" classpathref="ice.classpath" excludes="generated/**"
	    debug="${debug}">
	    <compilerarg value="${javac.lint}"/>
	</javac>
	<javac srcdir="${generated.dir}" destdir="${class.dir}"
	    classpathref="ice.classpath" debug="${debug}">
	    <compilerarg value="${javac.lint}"/>
	</javac>
    </target>

    <target name="all" depends="compile"/>

    <target name="clean">
        <delete dir="${generated.dir}"/>
        <delete dir="${class.dir}"/>
    </target>

</project>
